[*]
end_of_line = crlf

[*.json]
indent_size = 2

[*.cs]
indent_style = space
indent_size = 4
csharp_new_line_before_open_brace = methods,types
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
insert_final_newline = true
csharp_space_after_keywords_in_control_flow_statements = false

dotnet_diagnostic.CS1591.severity = none #temp until other issues fixed...

# Wish this worked, but with different rule sets and different target frameworks, it just has too many false-positives...
dotnet_diagnostic.IDE0079.severity = none
# Rule doesn't recognize partial classes, so it's just noise
dotnet_diagnostic.IDE0051.severity = none
dotnet_diagnostic.IDE0052.severity = none
# IDE0305: Simplify collection initialization, this makes LINQ fluent look less fluent, not great for LINQ heavy apps.
dotnet_diagnostic.IDE0305.severity = none

# This is just noise as default for web applications is not to return to non-existent UI thread.
dotnet_diagnostic.CA2007.severity = none # Consider calling ConfigureAwait on the awaited task

# Would be nice if this wasn't global, but conflicts on VB "shared" keyword
dotnet_diagnostic.CA1716.severity = none # Identifiers should not match keywords

# Adding delegates on blazor side increases memory pressure and bandwidth, don't accept this advice until tested.
dotnet_diagnostic.CA1848.severity = none # For improved performance, use ILogger delegates


# Bunch of new IDE rules which are stylistic in nature
# IDE0130: Namespace does not match folder structure, better for consumers to have a simplified experience
dotnet_style_namespace_match_folder = false
# IDE0160: Convert to block scoped namespace
csharp_style_namespace_declarations = file_scoped
# IDE0008: Use explicit type instead of 'var'
dotnet_diagnostic.IDE0008.severity = none 

[*.{cshtml,xml,html,css}]
indent_style = space
indent_size = 2

[*.md]
indent_style = space
indent_size = 4
