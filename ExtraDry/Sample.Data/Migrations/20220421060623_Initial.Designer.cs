// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sample.Data;

#nullable disable

namespace Sample.Data.Migrations
{
    [DbContext(typeof(SampleContext))]
    [Migration("20220421060623_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ExtraDry.Core.BlobInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Scope")
                        .HasColumnType("int");

                    b.Property<string>("ShaHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<Guid>("UniqueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Blobs");
                });

            modelBuilder.Entity("RegionRegion", b =>
                {
                    b.Property<int>("AncestorsId")
                        .HasColumnType("int");

                    b.Property<int>("DescendantsId")
                        .HasColumnType("int");

                    b.HasKey("AncestorsId", "DescendantsId");

                    b.HasIndex("DescendantsId");

                    b.ToTable("RegionRegion");
                });

            modelBuilder.Entity("Sample.Shared.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BankingDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PrimarySectorId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PrimarySectorId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Sample.Shared.Content", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Layout")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Contents");
                });

            modelBuilder.Entity("Sample.Shared.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Sample.Shared.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("Sample.Shared.Sector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Sectors");
                });

            modelBuilder.Entity("RegionRegion", b =>
                {
                    b.HasOne("Sample.Shared.Region", null)
                        .WithMany()
                        .HasForeignKey("AncestorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sample.Shared.Region", null)
                        .WithMany()
                        .HasForeignKey("DescendantsId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sample.Shared.Company", b =>
                {
                    b.HasOne("Sample.Shared.Sector", "PrimarySector")
                        .WithMany()
                        .HasForeignKey("PrimarySectorId");

                    b.OwnsOne("ExtraDry.Core.VersionInfo", "Version", b1 =>
                        {
                            b1.Property<int>("CompanyId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("DateCreated")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("DateModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("UserCreated")
                                .IsRequired()
                                .HasMaxLength(80)
                                .HasColumnType("nvarchar(80)");

                            b1.Property<string>("UserModified")
                                .IsRequired()
                                .HasMaxLength(80)
                                .HasColumnType("nvarchar(80)");

                            b1.HasKey("CompanyId");

                            b1.ToTable("Companies");

                            b1.WithOwner()
                                .HasForeignKey("CompanyId");
                        });

                    b.Navigation("PrimarySector");

                    b.Navigation("Version");
                });

            modelBuilder.Entity("Sample.Shared.Content", b =>
                {
                    b.OwnsOne("ExtraDry.Core.VersionInfo", "Version", b1 =>
                        {
                            b1.Property<int>("ContentId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("DateCreated")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("DateModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("UserCreated")
                                .IsRequired()
                                .HasMaxLength(80)
                                .HasColumnType("nvarchar(80)");

                            b1.Property<string>("UserModified")
                                .IsRequired()
                                .HasMaxLength(80)
                                .HasColumnType("nvarchar(80)");

                            b1.HasKey("ContentId");

                            b1.ToTable("Contents");

                            b1.WithOwner()
                                .HasForeignKey("ContentId");
                        });

                    b.Navigation("Version")
                        .IsRequired();
                });

            modelBuilder.Entity("Sample.Shared.Employee", b =>
                {
                    b.OwnsOne("ExtraDry.Core.VersionInfo", "Version", b1 =>
                        {
                            b1.Property<int>("EmployeeId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("DateCreated")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("DateModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("UserCreated")
                                .IsRequired()
                                .HasMaxLength(80)
                                .HasColumnType("nvarchar(80)");

                            b1.Property<string>("UserModified")
                                .IsRequired()
                                .HasMaxLength(80)
                                .HasColumnType("nvarchar(80)");

                            b1.HasKey("EmployeeId");

                            b1.ToTable("Employees");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");
                        });

                    b.Navigation("Version")
                        .IsRequired();
                });

            modelBuilder.Entity("Sample.Shared.Sector", b =>
                {
                    b.HasOne("Sample.Shared.Company", null)
                        .WithMany("AdditionalSectors")
                        .HasForeignKey("CompanyId");

                    b.OwnsOne("ExtraDry.Core.VersionInfo", "Version", b1 =>
                        {
                            b1.Property<int>("SectorId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("DateCreated")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("DateModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("UserCreated")
                                .IsRequired()
                                .HasMaxLength(80)
                                .HasColumnType("nvarchar(80)");

                            b1.Property<string>("UserModified")
                                .IsRequired()
                                .HasMaxLength(80)
                                .HasColumnType("nvarchar(80)");

                            b1.HasKey("SectorId");

                            b1.ToTable("Sectors");

                            b1.WithOwner()
                                .HasForeignKey("SectorId");
                        });

                    b.Navigation("Version");
                });

            modelBuilder.Entity("Sample.Shared.Company", b =>
                {
                    b.Navigation("AdditionalSectors");
                });
#pragma warning restore 612, 618
        }
    }
}
