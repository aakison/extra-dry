@page "/components/standard/tri-check"
@using System.ComponentModel.DataAnnotations

<section>
    <h2>TriCheck</h2>
    <p>
        The <code>&lt;TriCheck&gt;</code> component exposes a checkbox with three states.
    </p>
    <p>
        Uses the HTML 5 checkbox to control three states.  The indeterminate state in HTML is only accessible
        via JavaScript and users cannot 'click' into this state.  In Blazor, this indeterminate state can 
        be set using this control with normal data binding.  Useful for aggregate checkboxes when children
        are only partially selected.
    </p>
</section>
<section>
    <h3>Basic Usage</h3>
    <CodeBlock Lang="blazor">
        &lt;TriCheck @@bind-value="@@Value" /&gt;
        &lt;div&gt;@@Value&lt;/div&gt;

        @@code {
            public TriCheckState Value { get; set; } = TriCheckState.Checked;
        }
    </CodeBlock>
    <p>
        <TriCheck @bind-Value="@Value" />
        <div>@Value</div>
    </p>
    <CodeBlock Lang="blazor">
        &lt;TriCheck @@bind-value="@@Value" Label="@@Label" /&gt;
        &lt;div&gt;@@Value&lt;/div&gt;

        @@code {
            public TriCheckState Value { get; set; } = TriCheckState.Checked;
            
            public string Label { get; set; } = "@Label";
        }
    </CodeBlock>
    <p>
        <TriCheck @bind-value="@Value" Label="Three Choices!" />
        <div>@Value</div>
    </p>
    <h5>Try It Out</h5>
    <form class="tryitout" onsubmit="return false;">
        <div>
            <label>Value:</label>
            <select @bind="Value">
                <option value="@(TriCheckState.Checked)">TriCheckState.Checked</option>
                <option value="@(TriCheckState.Unchecked)">TriCheckState.Unchecked</option>
                <option value="@(TriCheckState.Indeterminate)">TriCheckState.Indeterminate</option>
            </select>
        </div>
    </form>
</section>
<section>
    <h3>Configuration</h3>
    <p>
        This is a standalone component, no configuration is required.
    </p>
    <h5>Semantic Styles</h5>
    <p>
        The control is rendered as a <code>&lt;label&gt;</code> enclosing an <code>&lt;input&gt;</code> and a <code>&lt;span&gt;</code>.  
        All have , both have the class "tri-check" for styling.
    </p>
    <CodeBlock lang="HTML">
        &lt;label class="tri-check" for="uniqueId"&gt;
            &lt;input class="tri-check" id="uniqueId" type="checkbox" /&gt;
            &lt;span class="tri-check">...&lt;/span&gt;
        &lt;label>
    </CodeBlock>
</section>
@*<section>
    <h3>Tips &amp; Practices</h3>
    <ul>
        <li></li>
    </ul>
</section>*@
<section>
    <h3>See Also</h3>
    <ul>
        <li><a href="/components/standard/flexi-select">FlexiSelect Component</a></li>
    </ul>
</section>

@code {
    public TriCheckState Value { get; set; } = TriCheckState.Checked;

    public string Label { get; set; } = "Three Choices!";
}
