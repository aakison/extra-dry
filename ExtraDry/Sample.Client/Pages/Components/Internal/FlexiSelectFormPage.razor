@page "/components/internal/flexi-select-form"
@implements ISubjectViewModel<Employee>

<section>
    <h2>FlexiSelectForm</h2>
    <p>
        The <code>&lt;DryMiniCard&gt;</code> component is an internal component for the selecting items, used by FlexiSelect.
    </p>
</section>
<section>
    <h3>Basic Usage</h3>
    <h5>No View Model</h5>
    <CodeBlock Lang="blazor">
        &lt;FlexiSelectForm Data="@@Employees" MultiSelect="@MultiSelect" ShowFilterThreshold="@ShowFilterThreshold" /&gt;

        @@code {
            private List&lt;Employee&gt; Employees { get; set; } = ...;
        }
    </CodeBlock>
    <FlexiSelectForm Data="@Data" MultiSelect="@MultiSelect" ShowFilterThreshold="@ShowFilterThreshold" @bind-Value="Value" @bind-Values="Values" />
    <h5>Bound Values</h5>
    <h6>Value:</h6>
    @if(Value != null) {
        <DryMiniCard Model="@Value" ViewModel="@this" />
    }
    <h6>Values:</h6>
    @if(Values != null) {
        foreach(var value in Values) {
            <DryMiniCard Model="@value" ViewModel="@this" />
        }
    }
    <h5>Try It Out</h5>
    <form class="tryitout" onsubmit="return false;">
        <div>
            <label>MultiSelect:</label>
            <input type="checkbox" @bind="@MultiSelect" />
        </div>
        <div>
            <label>ShowFilterThreshold:</label>
            <input type="number" @bind="@ShowFilterThreshold" />
        </div>
    </form>
</section>
<section>
    <h3>Configuration</h3>
    <p>
        This is a standalone component, no configuration is required.
    </p>
    <h5>Semantic Styles</h5>
    <p>The component wraps the <code>MiniCard</code> component and styles are the same as it.</p>
</section>
<section>
    <h3>Tips &amp; Practices</h3>
    <ul>
        <li>The component encapsulate the <code>MiniCard</code>, unused attributes are chained to that component.</li>
        <li>The component automatically detects if Thumbnail and Subtitle are present and displays or hides them accordingly.</li>
        <li>Use <code>ShowThumbnail</code> property to force always showing or hiding the Thumbnail.</li>
        <li>Use <code>ShowSubtitle</code> property to force always showing or hiding the Subtitle.</li>
    </ul>
</section>
<section>
    <h3>See Also</h3>
    <ul>
        <li><a href="/components/standard/mini-card"><code>MiniCard</code> Component</a></li>
    </ul>
</section>

@code {

    public string Code(Employee _) => string.Empty;

    public string Title(Employee employee) => $"{employee?.FirstName} {employee?.LastName}";

    public string Subtitle(Employee employee) => employee?.Email;

    public string Caption(Employee employee) => $"{employee?.FirstName} {employee?.LastName} ({employee?.Email})";

    public string Thumbnail(Employee employee) => Gravatar.ToGravatarUrl(employee?.Email, 40);

    public string Description(Employee _) => string.Empty;

    private bool MultiSelect { get; set; }

    private int ShowFilterThreshold { get; set; } = 10;

    private Employee? Value { get; set; }

    private List<Employee>? Values { get; set; }

    private List<Employee> Data { get; set; } = new();

    protected override void OnInitialized()
    {
        Data.Add(new Employee { FirstName = "Adrian", LastName = "Akison", Email = "adrian.akison@fmiworks.com" });
        Data.Add(new Employee { FirstName = "David", LastName = "Wilton", Email = "david.wilton@fmiworks.com" });
        Data.Add(new Employee { FirstName = "Shae", LastName = "Griffiths", Email = "shae.griffiths@fmiworks.com" });
        Data.Add(new Employee { FirstName = "Sam", LastName = "Camilleri", Email = "sam.camilleri@fmiworks.com" });
        Data.Add(new Employee { FirstName = "Hai", LastName = "Vu", Email = "hai.vu@fmiworks.com" });
        Data.Add(new Employee { FirstName = "Jaspal", LastName = "Muker", Email = "jaspal.muker@fmiworks.com" });
        Data.Add(new Employee { FirstName = "Anthony", LastName = "Pasquale", Email = "antonio.pasquale@fmiworks.com" });
        Data.Add(new Employee { FirstName = "Wayne", LastName = "Scott", Email = "wayne.scott@fmiworks.com" });
        Data.Add(new Employee { FirstName = "Kevin", LastName = "Thomas", Email = "kevin.thomase@fmiworks.com" });
    }

}
