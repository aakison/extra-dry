@page "/components/dry/dry-flexi-select"
@*@implements ISubjectViewModel<Employee>*@

<section>
    <h2>DryFlexiSelect</h2>
    <p>
        The <code>&lt;DryFlexiSelect&gt;</code> component is a dialog-based replacement for a select control.
    </p>
    <p>
        The component presents drop-down/pop-up mini-dialog that displays a list of elements.  This is
        designed to be styled responsively for mobile and desktop.  It support both single- and multi-
        select and filtering.
    </p>
</section>
<section>
    <h3>Enum Usage</h3>
    <CodeBlock Lang="blazor">
        &lt;DryFlexiSelect Model="@@this" PropertyName="@nameof(Status)" /&gt;
        &lt;div&gt;@@Status&lt;/div&gt;

        @@code {
            public CompanyStatus Status { get; set; }
        }
    </CodeBlock>
    <DryFlexiSelect Model="@this" PropertyName="@nameof(Status)" ShowFilterThreshold="2" />
    <div>@Status</div>
@*    <h3>Object Usage</h3>
    <CodeBlock Lang="blazor">
        &lt;DryFlexiSelect Model="@@this" PropertyName="nameof(Employee)" /&gt;

        @@code {
            private Employee Employee { get; set; }
        }
    </CodeBlock>
    <DryFlexiSelect Model="@this" PropertyName="Employee" />*@
</section>
<section>
    <h3>Configuration</h3>
    <p>
        This is a standalone component, no configuration is required.
    </p>
</section>
<section>
    <h3>Semantic Styles</h3>
    <p>The component wraps the <code>FlexiSelect</code> component and styles are the same as it.</p>
</section>
<section>
    <h3>Tips &amp; Practices</h3>
    <ul>
        <li>The component encapsulate the <code>MiniCard</code>, unused attributes are chained to that component.</li>
        <li>The component automatically detects if Thumbnail and Subtitle are present and displays or hides them accordingly.</li>
        <li>Use <code>ShowThumbnail</code> property to force always showing or hiding the Thumbnail.</li>
        <li>Use <code>ShowSubtitle</code> property to force always showing or hiding the Subtitle.</li>
    </ul>
</section>
<section>
    <h3>See Also</h3>
    <ul>
        <li><a href="/components/standard/flexi-select"><code>FlexiSelect</code> Component</a></li>
    </ul>
</section>

@code {

    public Employee Employee { get; set; }

    public CompanyStatus Status {
        get => status;
        set {
            status = value;
            StateHasChanged();
        }
    }
    private CompanyStatus status;

    //public string Code(Employee _) => string.Empty;

    //public string Title(Employee employee) => $"{employee?.FirstName} {employee?.LastName}";

    //public string Subtitle(Employee employee) => employee?.Email;

    //public string Caption(Employee employee) => $"{employee?.FirstName} {employee?.LastName} ({employee?.Email})";

    //public string Thumbnail(Employee employee) => Gravatar.ToGravatarUrl(employee?.Email, 40);

    //public string Description(Employee _) => string.Empty;

    //private string FormTitle { get; set; } = "Select";

    //private bool ShowTitle { get; set; } = true;

    //private bool MultiSelect { get; set; }

    //private int ShowFilterThreshold { get; set; } = 10;

    //private string FilterPlaceholder { get; set; } = "filter";

    //private Employee? Value { get; set; }

    //private List<Employee>? Distributions { get; set; }

    //private List<Employee> Data { get; set; } = new();

    //protected override void OnInitialized()
    //{
    //    Data.Add(new Employee { FirstName = "Adrian", LastName = "Akison", Email = "adrian.akison@fmiworks.com" });
    //    Data.Add(new Employee { FirstName = "David", LastName = "Wilton", Email = "david.wilton@fmiworks.com" });
    //    Data.Add(new Employee { FirstName = "Shae", LastName = "Griffiths", Email = "shae.griffiths@fmiworks.com" });
    //    Data.Add(new Employee { FirstName = "Sam", LastName = "Camilleri", Email = "sam.camilleri@fmiworks.com" });
    //    Data.Add(new Employee { FirstName = "Hai", LastName = "Vu", Email = "hai.vu@fmiworks.com" });
    //    Data.Add(new Employee { FirstName = "Jaspal", LastName = "Muker", Email = "jaspal.muker@fmiworks.com" });
    //    Data.Add(new Employee { FirstName = "Anthony", LastName = "Pasquale", Email = "antonio.pasquale@fmiworks.com" });
    //    Data.Add(new Employee { FirstName = "Wayne", LastName = "Scott", Email = "wayne.scott@fmiworks.com" });
    //    Data.Add(new Employee { FirstName = "Kevin", LastName = "Thomas", Email = "kevin.thomase@fmiworks.com" });
    //}

}
