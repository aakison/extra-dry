@import "_constants.scss";

// On mobile & tablet, use a curtain and a soverign dialog box.
// On desktop, pop-up in place.
.mini.dialog {

    &.curtain {
        position: absolute;
        left: 0;
        top: 0;
        width: 100vw;
        height: 100vh;
        background-color: #00000040;
        display: flex;
        // On desktop, curtain becomes a relative placement element instead of a normal curtain.
        @media #{$desktop-landscape} {
            width: initial;
            height: initial;
            position: relative;
        }
    }

    &.form {
        background-color: $var-white;
        margin: auto;
        width: calc(100vw - 4*$margin);
        height: calc(100vh - 4*$margin);
        position: relative;
        display: flex;
        flex-direction: column;
        // On desktop, the form becomes absolute relative to the curtain which should be next to the visibility control.
        @media #{$desktop-landscape} {
            position: absolute;
            // If classes for left/right are passed through then try to align properly.
            // Since we can't control the parent of the mini-dialog from here, it needs to be position: relative, display: inline-block for 'right' this to work.
            &.left {
                left: 0;
            }

            &.right {
                right: 0;
            }
        }
        // Max a max size for the form
        max-width: 500px;
        max-height: 854px;
        @include depth-large;

        &.many {
            // same as unspecified, repeated for completeness
            max-width: 500px;
            max-height: 854px;
        }

        &.several {
            max-width: 325px;
            max-height: 500px;
        }

        &.few {
            max-width: 250px;
            max-height: 300px;
        }

        header {
            background-color: $var-off-white;
            flex: 0 0 auto;
            display: flex;
            flex-direction: row;

            @media #{$desktop-landscape} {
                display: none;
            }

            .title {
                flex: 1 1 auto;

                h3 {
                    margin: 0;
                    padding: $margin;
                    font-size: 18px;
                    font-weight: bold;
                }
            }

            .item.commands {
                flex: 0 0 auto;
                display: flex;
                align-items: center;

                button {
                    height: 40px;

                    &.cancel {
                        font-size: 32px;
                        line-height: 20px;
                    }
                }
            }
        }

        .content {
            flex: 1 1 auto;
            padding: 0;
            margin: 0;
            overflow: hidden;
        }

        footer {
            background-color: $var-off-white;
            padding: $margin;
            flex: 0 0 auto;
            border-top: solid 1px $var-silver;

            button {
                width: 100%;
            }
        }
    }
}

// Example of animation using fade-in fade-out
// Change AnimationDuration on MiniDialog to 1000 to see this work.
.mini.dialog.form, .mini.dialog.curtain {
    transition: opacity 0.1s;
    &.showing, &.visible {
        opacity: 100%;
    }
    &.hidden, &.hiding {
        opacity: 0%;
    }
}
