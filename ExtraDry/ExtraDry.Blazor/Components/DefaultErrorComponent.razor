@namespace ExtraDry.Blazor
@using ExtraDry.Core.Models

<div class="@CssClass">
    <h3>Error Occurred</h3>

    @if(ProblemDetails != null) {
        <div class="problemDetails @CssClass">
            <div class="placeholder"></div>
            <dl>
                <dt class="status">Status</dt>
                <dd class="status">@ProblemDetails.Status</dd>

                <dt class="title">Title</dt>
                <dd class="title">@ProblemDetails.Title</dd>

                <dt class="details">Details</dt>
                <dd class="details">@ProblemDetails.Detail</dd>

                <dt class="instance">Instance</dt>
                <dd class="instance">@ProblemDetails.Instance</dd>
            </dl>
        </div>
    }   
    else {
        <div class="exception @CssClass">
            <div class="placeholder"></div>
            <dl>
                <dt class="exception">Exception</dt>
                <dd class="exception">@DataConverter.CamelCaseToTitleCase(Exception.GetType().Name)</dd>

                <dt class="message">Message</dt>
                <dd class="message">@Exception?.Message</dd>

                <dt class="instructions">Instructions</dt>
                <dd class="instructions">
                    Exposing exceptions is not friendly for users, considering shifting exceptions
                    to problem details.
                </dd>
            </dl>
            
        </div>
    }
</div>

@code {

    #nullable enable

    [Parameter]
    public Exception? Exception { get; set; }

    [Parameter]
    public ProblemDetails? ProblemDetails { get; set; }

    private string ErrorCss => ProblemDetails?.Status == null ? "errorXxx" : $"error{ProblemDetails.Status}";

    private string CssClass => $"error {ErrorCss}";
}
