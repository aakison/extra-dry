@namespace ExtraDry.Blazor
@typeparam TItem

<table class="@CssClasses" @attributes="@UnmatchedAttributes">
    <colgroup>
        @if(HasCheckboxColumn) {
        <col class="checkbox" />
        }
        @if(HasRadioColumn) {
        <col class="radio" />
        }
        @foreach(var column in description.TableProperties) {
        <col class="@column.DisplayClass" />
        }
        @if(HasCommandsColumn) {
        <col class="commands" />
        }
    </colgroup>
    <thead>
        <tr>
            @if(HasCheckboxColumn) {
                <th class="checkbox"><input type="checkbox" checked="@AllSelected" @onclick="@(() => ToggleSelectAll())" /></th>
            }
            @if(HasRadioColumn) {
                <th class="radio"></th>
            }
            @foreach(var column in description.TableProperties) {
                var builder = QueryBuilderAccessor?.QueryBuilder;
                var direction = builder?.Sort.Ascending ?? true ? "ascending" : "descending";
                var sortClasses = column.Property.Name == builder?.Sort.SortProperty ? $"sort {direction}" : "";
                <th class="@column.DisplayClass @sortClasses" @onclick="@(e => SortBy(column))">
                    <span>@column.ColumnCaption</span>
                    <sup class="@sortClasses"></sup>
                </th>
            }
            @if(HasCommandsColumn) {
                <th class="commands"></th>
            }
        </tr>
    </thead>
    <tbody>
        <tr class="state @StateClass">
            <td colspan="@TotalColumns">
                <div>
                    <progress />
                </div>
            </td>
        </tr>
        <Virtualize ItemsProvider="GetItemsAsync" ItemSize="45" @ref="VirtualContainer">
        <ItemContent>
            <DryTableRow Item="@context" Description="@description" Selection="@SelectionAccessor?.SelectionSet" Height="45" GroupColumn="@GroupColumn" />
        </ItemContent>
        </Virtualize>
    </tbody>
</table>
