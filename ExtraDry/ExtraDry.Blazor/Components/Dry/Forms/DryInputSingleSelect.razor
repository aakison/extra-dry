@namespace ExtraDry.Blazor.Forms
@typeparam T
@inherits DryInputBase<T>

<div class="@CssClasses" @attributes="@UnmatchedAttributes">
    @if(ResolvedIcon != "") {
        <Icon CssClass="context" Key="@ResolvedIcon"/>
    }
    @if(ReadOnly) {
        var value = Values != null && SelectedValue != null ? Values.IndexOf(SelectedValue) : -1;
        <select class="@CssClasses readonly" disabled title="@Property?.FieldCaption" @attributes="@UnmatchedAttributes">
            <option value="@value" selected>@SelectedValue?.ToString()</option>
        </select>
    }
    else {
        <select class="@CssClasses" title="@Property?.FieldCaption" @onchange="SelectOption" @attributes="@UnmatchedAttributes">
            @if(SelectedValue == null) {
                <option value="" disabled selected>@Property?.Display?.Prompt</option>
            }
            @foreach(var option in Options) {
                var selected = option == SelectedOption;
                <option value="@option.Key" selected="@selected">@option.DisplayText</option>
            }
        </select>
    }
    @if(ResolvedAffordance != "" && !ReadOnly) {
        <Icon CssClass="affordance" Key="@ResolvedAffordance" />
    }
</div>
