@typeparam T

<tr data-uuid="@UuidValue" class="@CssClasses" @onclick="RowClick" @ondblclick="RowDoubleClick" style="height: @($"{Height}px")">
    @switch(Description.ListSelectMode) {
        case ListSelectMode.Multiple:
            <td class="checkbox"><input type="checkbox" checked="@IsSelected" /></td>
            break;
        case ListSelectMode.Single:
            <td class="radio"><input type="radio" checked="@IsSelected" name="@RadioButtonScope" /></td>
            break;
        default:
            break;
    }
    @foreach(var column in Description.TableProperties) {
        var cssClass = column.ItemDisplayClass(Item.Item);
        var displayValue = column.DisplayValue(Item.Item);
        var hyperlink = Description.HyperLinkFor(column.Property.Name);
        if(column.HasDiscreteValues) {
            var enumValue = column.GetValue(Item.Item);
            cssClass += $" {enumValue?.ToString()?.ToLowerInvariant()}";
        }
        <td class="@cssClass" data-label="@column.ColumnCaption">
            @if(column.Property.Name == GroupColumn) {
                var cssAction = (Item.IsGroup, Item.IsExpanded) switch {
                    (false, _) => "child",
                    (true, false) => "collapsed",
                    (true, true) => "expanded"
                };
                @if(Item.Item is IHierarchyEntity) {
                    <DryTableHierarchyExpander Item="@Item" />
                }
                <span class="group @cssAction">@displayValue</span>
            }
            else if(hyperlink == null) {
                <span class="@cssClass">@displayValue</span>
            }
            else {
                var context = @hyperlink.Execute(Item.Item);
                if(context.Action != null) {
                    <span class="@cssClass"><a class="@context.DisplayClass" href="@context.Href" title="@context.Title" @onclick="@(async () => await context.Action(context))" @onclick:preventDefault="true">@displayValue</a></span>
                }
                else {
                    <span class="@cssClass"><a class="@context.DisplayClass" href="@context.Href" title="@context.Title">@displayValue</a></span>
                }
            }
        </td>
    }
    @if(Description.ContextCommands.Any()) {
        <td class="commands">
            <div class="contextCommands">
                @foreach(var command in Description.ContextCommands) {
                    <DryButton Command="@command" Model="@Item.Item" IconOnly="true" />
                }
            </div>
        </td>
    }
</tr>
