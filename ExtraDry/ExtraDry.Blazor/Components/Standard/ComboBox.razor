@namespace ExtraDry.Blazor
@implements IExtraDryComponent
@typeparam TItem

<div class="@CssClasses" id="@Id" @attributes="@UnmatchedAttributes" 
    @onfocusout="DoFocusOut"
    @onkeydown:preventDefault="PreventDefault" @onkeypress:preventDefault="PreventDefault" @onkeyup:preventDefault="PreventDefault" 
    @onkeydown="DoKeyPress" tabindex="-1">
    <label for="@Id">
        <span class="type"></span>
        <input type="text" name="@Name" placeholder="@Placeholder" @bind-value="Filter" @bind-value:event="oninput" />
        <button class="unobtrusive" id="@Id" @onclick="DoClick" type="button" tabindex="-1"><Icon Key="select" /></button>
    </label>
    @if(ShowOptions) {
        <ol class="options">
            @{
                int index = 0;
                foreach (var item in FilteredItems)
                {
                    var selected = item.Equals(SelectedItem) ? "selected" : "";
                    int i = index;
                    <li id="@DisplayItemID(item)" class="option @selected" @ondblclick="async e => await ConfirmInputAsync(item)" @onclick="e => SelectItemIndex(i)">@DisplayItemTitle(item)</li>
                    ++index;
                }
            }
        </ol>
    }
</div>
